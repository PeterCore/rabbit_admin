// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type CourseCreate = {
    /**
     * 课表ID
     */
    schedule_id: string;
    /**
     * 课程开始时间，格式：YYYY-MM-DD HH:MM
     */
    start_time: string;
    /**
     * 课程结束时间，格式：YYYY-MM-DD HH:MM
     */
    end_time: string;
    /**
     * 上课地址
     */
    address: string;
    /**
     * 课程状态
     */
    status?: CourseStatus;
    /**
     * 备注
     */
    remark?: (string | null);
    /**
     * 学生ID列表
     */
    student_ids?: Array<(string)>;
};

export type CourseStatus = 'not_started' | 'in_progress' | 'completed' | 'cancelled';

export type CourseUpdate = {
    /**
     * 课表ID
     */
    schedule_id?: (string | null);
    /**
     * 课程开始时间，格式：YYYY-MM-DD HH:MM
     */
    start_time?: (string | null);
    /**
     * 课程结束时间，格式：YYYY-MM-DD HH:MM
     */
    end_time?: (string | null);
    /**
     * 上课地址
     */
    address?: (string | null);
    /**
     * 课程状态
     */
    status?: (CourseStatus | null);
    /**
     * 备注
     */
    remark?: (string | null);
    /**
     * 学生ID列表
     */
    student_ids?: (Array<(string)> | null);
};

export type CourseWithDetails = {
    id: string;
    schedule_id: string;
    teacher_name?: (string | null);
    subject_name?: (string | null);
    start_time: string;
    end_time: string;
    address: string;
    status: CourseStatus;
    remark?: (string | null);
    students?: Array<StudentPublic>;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type ItemCreate = {
    title: string;
    description?: (string | null);
};

export type ItemPublic = {
    title: string;
    description?: (string | null);
    id: string;
    owner_id: string;
};

export type ItemsPublic = {
    data: Array<ItemPublic>;
    count: number;
};

export type ItemUpdate = {
    title?: (string | null);
    description?: (string | null);
};

export type Message = {
    message: string;
};

export type NewPassword = {
    token: string;
    new_password: string;
};

export type PrivateUserCreate = {
    email: string;
    password: string;
    full_name: string;
    is_verified?: boolean;
};

export type Role = {
    id?: string;
    /**
     * 角色名称
     */
    name: string;
    /**
     * 角色描述
     */
    description?: (string | null);
};

export type RoleCreate = {
    /**
     * 角色名称
     */
    name: string;
    /**
     * 角色描述
     */
    description?: (string | null);
};

export type RoleUpdate = {
    /**
     * 角色名称
     */
    name?: (string | null);
    /**
     * 角色描述
     */
    description?: (string | null);
};

export type Schedule = {
    id?: string;
    /**
     * 教师ID
     */
    teacher_id: string;
    /**
     * 课时数
     */
    hours: number;
    /**
     * 费用
     */
    fee: number;
    /**
     * 备注
     */
    remark?: (string | null);
};

export type ScheduleCreate = {
    /**
     * 教师ID
     */
    teacher_id: string;
    /**
     * 课时数
     */
    hours: number;
    /**
     * 费用
     */
    fee: number;
    /**
     * 备注
     */
    remark?: (string | null);
};

export type ScheduleUpdate = {
    /**
     * 教师ID
     */
    teacher_id?: (string | null);
    /**
     * 课时数
     */
    hours?: (number | null);
    /**
     * 费用
     */
    fee?: (number | null);
    /**
     * 备注
     */
    remark?: (string | null);
};

export type ScheduleWithTeacher = {
    id: string;
    teacher_id: string;
    teacher_name?: (string | null);
    subject_name?: (string | null);
    hours: number;
    fee: number;
    remark?: (string | null);
};

export type Student = {
    id?: string;
    /**
     * 学生姓名
     */
    name: string;
    /**
     * 学生备注
     */
    remark?: (string | null);
    /**
     * 学生电话号码
     */
    phone?: (string | null);
    /**
     * 学生性别，0为女性，1为男性
     */
    genders: number;
    /**
     * 学生地址
     */
    address?: (string | null);
};

export type StudentCreate = {
    /**
     * 学生姓名
     */
    name: string;
    /**
     * 学生备注
     */
    remark?: (string | null);
    /**
     * 学生电话号码
     */
    phone?: (string | null);
    /**
     * 学生性别，0为女性，1为男性
     */
    genders: number;
    /**
     * 学生地址
     */
    address?: (string | null);
};

export type StudentPublic = {
    id: string;
    name: string;
    remark?: (string | null);
    phone?: (string | null);
    genders: number;
    address?: (string | null);
};

export type StudentUpdate = {
    /**
     * 学生姓名
     */
    name?: (string | null);
    /**
     * 学生备注
     */
    remark?: (string | null);
    /**
     * 学生电话号码
     */
    phone?: (string | null);
    /**
     * 学生性别，0为女性，1为男性
     */
    genders?: (number | null);
    /**
     * 学生地址
     */
    address?: (string | null);
};

export type Subject = {
    id?: string;
    /**
     * 学科名称
     */
    name: string;
    /**
     * 学科描述
     */
    description?: (string | null);
};

export type SubjectCreate = {
    /**
     * 学科名称
     */
    name: string;
    /**
     * 学科描述
     */
    description?: (string | null);
};

export type SubjectUpdate = {
    /**
     * 学科名称
     */
    name?: (string | null);
    /**
     * 学科描述
     */
    description?: (string | null);
};

export type Teacher = {
    id?: string;
    /**
     * 教师姓名
     */
    name: string;
    /**
     * 教师备注
     */
    remark: string;
    /**
     * 教师姓名的拼音
     */
    spell_name: string;
    /**
     * 教师性别，0为女性，1为男性
     */
    genders: number;
    /**
     * 教师的电话号码
     */
    phone?: (string | null);
    /**
     * 教师学科ID
     */
    subject_id: string;
};

export type TeacherCreate = {
    /**
     * 教师姓名
     */
    name: string;
    /**
     * 教师备注
     */
    remark: string;
    /**
     * 教师姓名的拼音
     */
    spell_name: string;
    /**
     * 教师性别，0为女性，1为男性
     */
    genders: number;
    /**
     * 教师的电话号码
     */
    phone?: (string | null);
    /**
     * 教师学科ID
     */
    subject_id: string;
};

export type TeacherUpdate = {
    /**
     * 教师姓名
     */
    name?: (string | null);
    /**
     * 教师备注
     */
    remark?: (string | null);
    /**
     * 教师姓名的拼音
     */
    spell_name?: (string | null);
    /**
     * 教师性别，0为女性，1为男性
     */
    genders?: (number | null);
    /**
     * 教师的电话号码
     */
    phone?: (string | null);
    /**
     * 教师学科ID
     */
    subject_id?: (string | null);
};

export type TeacherWithSubject = {
    id: string;
    name: string;
    remark: string;
    spell_name: string;
    genders: number;
    phone: (string | null);
    subject_id: string;
    subject_name?: (string | null);
};

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UpdatePassword = {
    current_password: string;
    new_password: string;
};

export type UserCreate = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    password: string;
};

export type UserPublic = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    id: string;
};

export type UserRegister = {
    email: string;
    password: string;
    full_name?: (string | null);
};

export type UsersPublic = {
    data: Array<UserPublic>;
    count: number;
};

export type UserUpdate = {
    email?: (string | null);
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    password?: (string | null);
};

export type UserUpdateMe = {
    full_name?: (string | null);
    email?: (string | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type CourseCreateCourseApiData = {
    requestBody: CourseCreate;
};

export type CourseCreateCourseApiResponse = (CourseWithDetails);

export type CourseListCoursesData = {
    limit?: number;
    skip?: number;
};

export type CourseListCoursesResponse = (Array<CourseWithDetails>);

export type CourseGetCourseApiData = {
    courseId: string;
};

export type CourseGetCourseApiResponse = (CourseWithDetails);

export type CourseUpdateCourseApiData = {
    courseId: string;
    requestBody: CourseUpdate;
};

export type CourseUpdateCourseApiResponse = (CourseWithDetails);

export type CourseDeleteCourseApiData = {
    courseId: string;
};

export type CourseDeleteCourseApiResponse = (Message);

export type ItemsReadItemsData = {
    limit?: number;
    skip?: number;
};

export type ItemsReadItemsResponse = (ItemsPublic);

export type ItemsCreateItemData = {
    requestBody: ItemCreate;
};

export type ItemsCreateItemResponse = (ItemPublic);

export type ItemsReadItemData = {
    id: string;
};

export type ItemsReadItemResponse = (ItemPublic);

export type ItemsUpdateItemData = {
    id: string;
    requestBody: ItemUpdate;
};

export type ItemsUpdateItemResponse = (ItemPublic);

export type ItemsDeleteItemData = {
    id: string;
};

export type ItemsDeleteItemResponse = (Message);

export type LoginLoginAccessTokenData = {
    formData: Body_login_login_access_token;
};

export type LoginLoginAccessTokenResponse = (Token);

export type LoginTestTokenResponse = (UserPublic);

export type LoginRecoverPasswordData = {
    email: string;
};

export type LoginRecoverPasswordResponse = (Message);

export type LoginResetPasswordData = {
    requestBody: NewPassword;
};

export type LoginResetPasswordResponse = (Message);

export type LoginRecoverPasswordHtmlContentData = {
    email: string;
};

export type LoginRecoverPasswordHtmlContentResponse = (string);

export type PrivateCreateUserData = {
    requestBody: PrivateUserCreate;
};

export type PrivateCreateUserResponse = (UserPublic);

export type RoleCreateRoleApiData = {
    requestBody: RoleCreate;
};

export type RoleCreateRoleApiResponse = (Role);

export type RoleListRolesData = {
    limit?: number;
    skip?: number;
};

export type RoleListRolesResponse = (Array<Role>);

export type RoleGetRoleApiData = {
    roleId: string;
};

export type RoleGetRoleApiResponse = (Role);

export type RoleUpdateRoleApiData = {
    requestBody: RoleUpdate;
    roleId: string;
};

export type RoleUpdateRoleApiResponse = (Role);

export type RoleDeleteRoleApiData = {
    roleId: string;
};

export type RoleDeleteRoleApiResponse = (boolean);

export type ScheduleCreateScheduleApiData = {
    requestBody: ScheduleCreate;
};

export type ScheduleCreateScheduleApiResponse = (Schedule);

export type ScheduleListSchedulesData = {
    limit?: number;
    skip?: number;
};

export type ScheduleListSchedulesResponse = (Array<ScheduleWithTeacher>);

export type ScheduleGetScheduleApiData = {
    scheduleId: string;
};

export type ScheduleGetScheduleApiResponse = (Schedule);

export type ScheduleUpdateScheduleApiData = {
    requestBody: ScheduleUpdate;
    scheduleId: string;
};

export type ScheduleUpdateScheduleApiResponse = (Schedule);

export type ScheduleDeleteScheduleApiData = {
    scheduleId: string;
};

export type ScheduleDeleteScheduleApiResponse = (boolean);

export type StudentCreateStudentApiData = {
    requestBody: StudentCreate;
};

export type StudentCreateStudentApiResponse = (Student);

export type StudentListStudentsData = {
    limit?: number;
    skip?: number;
};

export type StudentListStudentsResponse = (Array<Student>);

export type StudentGetStudentApiData = {
    studentId: string;
};

export type StudentGetStudentApiResponse = (Student);

export type StudentUpdateStudentApiData = {
    requestBody: StudentUpdate;
    studentId: string;
};

export type StudentUpdateStudentApiResponse = (Student);

export type StudentDeleteStudentApiData = {
    studentId: string;
};

export type StudentDeleteStudentApiResponse = (boolean);

export type SubjectCreateSubjectApiData = {
    requestBody: SubjectCreate;
};

export type SubjectCreateSubjectApiResponse = (Subject);

export type SubjectListSubjectsData = {
    limit?: number;
    skip?: number;
};

export type SubjectListSubjectsResponse = (Array<Subject>);

export type SubjectGetSubjectApiData = {
    subjectId: string;
};

export type SubjectGetSubjectApiResponse = (Subject);

export type SubjectUpdateSubjectApiData = {
    requestBody: SubjectUpdate;
    subjectId: string;
};

export type SubjectUpdateSubjectApiResponse = (Subject);

export type SubjectDeleteSubjectApiData = {
    subjectId: string;
};

export type SubjectDeleteSubjectApiResponse = (boolean);

export type TeacherCreateTeacherApiData = {
    requestBody: TeacherCreate;
};

export type TeacherCreateTeacherApiResponse = (Teacher);

export type TeacherListTeachersData = {
    limit?: number;
    skip?: number;
};

export type TeacherListTeachersResponse = (Array<TeacherWithSubject>);

export type TeacherGetTeacherApiData = {
    teacherId: string;
};

export type TeacherGetTeacherApiResponse = (Teacher);

export type TeacherUpdateTeacherApiData = {
    requestBody: TeacherUpdate;
    teacherId: string;
};

export type TeacherUpdateTeacherApiResponse = (Teacher);

export type TeacherDeleteTeacherApiData = {
    teacherId: string;
};

export type TeacherDeleteTeacherApiResponse = (boolean);

export type UsersReadUsersData = {
    limit?: number;
    skip?: number;
};

export type UsersReadUsersResponse = (UsersPublic);

export type UsersCreateUserData = {
    requestBody: UserCreate;
};

export type UsersCreateUserResponse = (UserPublic);

export type UsersReadUserMeResponse = (UserPublic);

export type UsersDeleteUserMeResponse = (Message);

export type UsersUpdateUserMeData = {
    requestBody: UserUpdateMe;
};

export type UsersUpdateUserMeResponse = (UserPublic);

export type UsersUpdatePasswordMeData = {
    requestBody: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = (Message);

export type UsersRegisterUserData = {
    requestBody: UserRegister;
};

export type UsersRegisterUserResponse = (UserPublic);

export type UsersReadUserByIdData = {
    userId: string;
};

export type UsersReadUserByIdResponse = (UserPublic);

export type UsersUpdateUserData = {
    requestBody: UserUpdate;
    userId: string;
};

export type UsersUpdateUserResponse = (UserPublic);

export type UsersDeleteUserData = {
    userId: string;
};

export type UsersDeleteUserResponse = (Message);

export type UtilsTestEmailData = {
    emailTo: string;
};

export type UtilsTestEmailResponse = (Message);

export type UtilsHealthCheckResponse = (boolean);